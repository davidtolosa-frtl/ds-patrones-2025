using InterfazUsuario.Client;
using InterfazUsuario.Factory;
using InterfazUsuario.Interfaces;

namespace InterfazUsuario
{
    /// <summary>
    /// Programa principal que demuestra el patr√≥n Abstract Factory
    /// </summary>
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("=================================================");
            Console.WriteLine("üè≠ DEMOSTRACI√ìN DEL PATR√ìN ABSTRACT FACTORY");
            Console.WriteLine("   Elementos de Interfaz de Usuario");
            Console.WriteLine("=================================================\n");

            try
            {
                // Demostraci√≥n 1: Detecci√≥n autom√°tica del SO
                Console.WriteLine("üîç DEMOSTRACI√ìN 1: Detecci√≥n autom√°tica del SO");
                Console.WriteLine("-----------------------------------------------");
                
                IGUIFactory autoFactory = GUIFactoryProvider.GetFactory();
                Application autoApp = new Application(autoFactory);
                
                autoApp.CreateUI();
                autoApp.RenderUI();
                autoApp.InteractWithUI();
                autoApp.ShowInfo();

                Console.WriteLine("\n" + new string('=', 50) + "\n");

                // Demostraci√≥n 2: Selecci√≥n manual - Windows
                Console.WriteLine("üîß DEMOSTRACI√ìN 2: F√°brica de Windows (manual)");
                Console.WriteLine("-----------------------------------------------");
                
                IGUIFactory windowsFactory = GUIFactoryProvider.GetFactory("windows");
                Application windowsApp = new Application(windowsFactory);
                
                windowsApp.CreateUI();
                windowsApp.RenderUI();
                windowsApp.InteractWithUI();
                windowsApp.ShowInfo();

                Console.WriteLine("\n" + new string('=', 50) + "\n");

                // Demostraci√≥n 3: Selecci√≥n manual - Linux
                Console.WriteLine("üîß DEMOSTRACI√ìN 3: F√°brica de Linux (manual)");
                Console.WriteLine("---------------------------------------------");
                
                IGUIFactory linuxFactory = GUIFactoryProvider.GetFactory("linux");
                Application linuxApp = new Application(linuxFactory);
                
                linuxApp.CreateUI();
                linuxApp.RenderUI();
                linuxApp.InteractWithUI();
                linuxApp.ShowInfo();

                Console.WriteLine("\n" + new string('=', 50) + "\n");

                // Demostraci√≥n interactiva
                Console.WriteLine("üéÆ DEMOSTRACI√ìN INTERACTIVA");
                Console.WriteLine("---------------------------");
                DemostracionInteractiva();

            }
            catch (Exception ex)
            {
                Console.WriteLine($"‚ùå Error: {ex.Message}");
            }

            Console.WriteLine("\nüèÅ ¬°Demostraci√≥n completada!");
            Console.WriteLine("Presiona cualquier tecla para salir...");
            Console.ReadKey();
        }

        static void DemostracionInteractiva()
        {
            while (true)
            {
                Console.WriteLine("\nSelecciona el tipo de interfaz:");
                Console.WriteLine("1. Windows");
                Console.WriteLine("2. Linux");
                Console.WriteLine("3. Salir");
                Console.Write("Opci√≥n: ");

                string? input = Console.ReadLine();
                
                if (input == "3" || string.IsNullOrEmpty(input))
                    break;

                try
                {
                    IGUIFactory factory = input switch
                    {
                        "1" => GUIFactoryProvider.GetFactory("windows"),
                        "2" => GUIFactoryProvider.GetFactory("linux"),
                        _ => throw new ArgumentException("Opci√≥n no v√°lida")
                    };

                    Console.WriteLine($"\nüéØ Creando interfaz para {(input == "1" ? "Windows" : "Linux")}:");
                    
                    Application app = new Application(factory);
                    app.CreateUI();
                    app.RenderUI();
                    app.InteractWithUI();
                    app.ShowInfo();
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"‚ùå Error: {ex.Message}");
                }
            }
        }
    }
}
